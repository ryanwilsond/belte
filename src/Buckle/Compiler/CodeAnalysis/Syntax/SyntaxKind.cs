
namespace Buckle.CodeAnalysis.Syntax;

/// <summary>
/// All types of things to be found in a source file.
/// </summary>
public enum SyntaxKind : ushort {
    None = 0,
    List = GreenNode.ListKind,

    // Punctuation
    TildeToken,
    ExclamationToken,
    PercentToken,
    CaretToken,
    AmpersandToken,
    AsteriskToken,
    OpenParenToken,
    CloseParenToken,
    MinusToken,
    PlusToken,
    EqualsToken,
    OpenBraceToken,
    CloseBraceToken,
    OpenBracketToken,
    CloseBracketToken,
    PipeToken,
    SemicolonToken,
    LessThanToken,
    CommaToken,
    GreaterThanToken,
    SlashToken,
    QuestionToken,
    ColonToken,
    PeriodToken,
    HashToken,

    // Compound punctuation
    PipePipeToken,
    AmpersandAmpersandToken,
    MinusMinusToken,
    PlusPlusToken,
    AsteriskAsteriskToken,
    QuestionQuestionToken,
    ExclamationEqualsToken,
    EqualsEqualsToken,
    LessThanEqualsToken,
    LessThanLessThanToken,
    LessThanLessThanEqualsToken,
    GreaterThanEqualsToken,
    GreaterThanGreaterThanToken,
    GreaterThanGreaterThanEqualsToken,
    SlashEqualsToken,
    AsteriskEqualsToken,
    PipeEqualsToken,
    AmpersandEqualsToken,
    PlusEqualsToken,
    MinusEqualsToken,
    AsteriskAsteriskEqualsToken,
    CaretEqualsToken,
    PercentEqualsToken,
    QuestionQuestionEqualsToken,
    GreaterThanGreaterThanGreaterThanToken,
    GreaterThanGreaterThanGreaterThanEqualsToken,
    QuestionPeriodToken,
    QuestionOpenBracketToken,

    // Keywords
    TypeOfKeyword,
    NameOfKeyword,
    NullKeyword,
    TrueKeyword,
    FalseKeyword,
    IfKeyword,
    ElseKeyword,
    WhileKeyword,
    ForKeyword,
    DoKeyword,
    TryKeyword,
    CatchKeyword,
    FinallyKeyword,
    BreakKeyword,
    ContinueKeyword,
    ReturnKeyword,
    ConstKeyword,
    ConstexprKeyword,
    RefKeyword,
    IsKeyword,
    IsntKeyword,
    StructKeyword,
    ClassKeyword,
    NewKeyword,
    ThisKeyword,
    BaseKeyword,
    StaticKeyword,
    OperatorKeyword,
    LowlevelKeyword,
    ExtendsKeyword,
    PublicKeyword,
    PrivateKeyword,
    ProtectedKeyword,
    SealedKeyword,
    AbstractKeyword,
    VirtualKeyword,
    OverrideKeyword,
    ConstructorKeyword,
    AsKeyword,
    WhereKeyword,
    ThrowKeyword,
    PrimitiveKeyword,
    NotnullKeyword,

    // Tokens with text
    BadToken,
    IdentifierToken,
    NumericLiteralToken,
    StringLiteralToken,
    CharacterLiteralToken,

    // Trivia
    EndOfLineTrivia,
    WhitespaceTrivia,
    SingleLineCommentTrivia,
    MultiLineCommentTrivia,
    SkippedTokensTrivia,
    BadDirectiveTrivia,

    // Expressions
    ParenthesizedExpression,
    CastExpression,
    ThisExpression,
    BaseExpression,
    ThrowExpression,
    EmptyExpression,

    // Operator expressions
    TernaryExpression,
    BinaryExpression,
    UnaryExpression,
    IndexExpression,
    PrefixExpression,
    PostfixExpression,
    AssignmentExpression,
    CompoundAssignmentExpression,

    // Primary expressions
    LiteralExpression,
    TypeOfExpression,
    NameOfExpression,
    CallExpression,
    ReferenceExpression,
    MemberAccessExpression,
    ObjectCreationExpression,

    // Statements
    BlockStatement,
    ExpressionStatement,
    LocalDeclarationStatement,
    LocalFunctionStatement,
    EmptyStatement,

    // Jump statements
    BreakStatement,
    ContinueStatement,
    ReturnStatement,
    WhileStatement,
    DoWhileStatement,
    ForStatement,

    // Checked statements
    IfStatement,
    ElseClause,
    TryStatement,
    CatchClause,
    FinallyClause,

    // Declarations
    CompilationUnit,
    GlobalStatement,
    VariableDeclaration,
    EqualsValueClause,
    StructDeclaration,
    ClassDeclaration,
    FieldDeclaration,
    MethodDeclaration,
    ConstructorDeclaration,
    ConstructorInitializer,
    OperatorDeclaration,

    // Names
    IdentifierName,
    TemplateName,
    QualifiedName,
    EmptyName,
    ArrayType,
    NonNullableType,
    ReferenceType,
    BaseType,

    // Lists
    Argument,
    ArgumentList,
    Parameter,
    ParameterList,
    ArrayRankSpecifier,
    TemplateParameterList,
    TemplateArgumentList,
    Attribute,
    AttributeList,
    TemplateConstraintClause,
    TemplateExtendsConstraintClause,
    TemplateIsConstraintClause,
    TemplateConstraintClauseList,
    InitializerListExpression,
    KeyValuePair,
    InitializerDictionaryExpression,

    // Other
    EndOfFileToken,
    EndOfDirectiveToken,
}
