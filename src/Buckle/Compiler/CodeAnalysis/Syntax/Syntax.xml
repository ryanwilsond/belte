<?xml version="1.0" encoding="utf-8"?>
<Tree Root="SyntaxNode">
  <PredefinedNode Name="SyntaxToken"/>
  <PredefinedNode Name="SyntaxTrivia"/>
  <PredefinedNode Name="StructuredTriviaSyntax"/>
  <Node Name="SkippedTokensTriviaSyntax" Base="StructuredTriviaSyntax">
    <Kind Name="SkippedTokensTrivia"/>
    <Field Name="tokens" Type="SyntaxList&lt;SyntaxToken&gt;"/>
  </Node>
  <!-- Lists -->
  <Node Name="AttributeListSyntax" Base="SyntaxNode">
    <Kind Name="AttributeList"/>
    <Field Name="openBracket" Type="SyntaxToken">
      <Kind Name="OpenBracketToken"/>
    </Field>
    <Field Name="attributes" Type="SeparatedSyntaxList&lt;AttributeSyntax&gt;"/>
    <Field Name="closeBracket" Type="SyntaxToken">
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>
  <Node Name="AttributeSyntax" Base="SyntaxNode">
    <Kind Name="Attribute"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
  </Node>
  <Node Name="ArgumentListSyntax" Base="SyntaxNode">
    <Kind Name="ArgumentList"/>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="ArgumentSyntax" Base="SyntaxNode">
    <Kind Name="Argument"/>
    <Field Name="identifier" Type="SyntaxToken" Optional="true">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="colon" Type="SyntaxToken" Optional="true">
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ParameterListSyntax" Base="SyntaxNode">
    <Kind Name="ParameterList"/>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="ParameterSyntax" Base="SyntaxNode">
    <Kind Name="Parameter"/>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="defaultValue" Type="EqualsValueClauseSyntax" Optional="true"/>
  </Node>
  <Node Name="TemplateArgumentListSyntax" Base="SyntaxNode">
    <Kind Name="TemplateArgumentList"/>
    <Field Name="openAngleBracket" Type="SyntaxToken">
      <Kind Name="LessThanToken"/>
    </Field>
    <Field Name="arguments" Type="SeparatedSyntaxList&lt;ArgumentSyntax&gt;"/>
    <Field Name="closeAngleBracket" Type="SyntaxToken">
      <Kind Name="GreaterThanToken"/>
    </Field>
  </Node>
  <Node Name="TemplateParameterListSyntax" Base="SyntaxNode">
    <Kind Name="TemplateParameterList"/>
    <Field Name="openAngleBracket" Type="SyntaxToken">
      <Kind Name="LessThanToken"/>
    </Field>
    <Field Name="parameters" Type="SeparatedSyntaxList&lt;ParameterSyntax&gt;"/>
    <Field Name="closeAngleBracket" Type="SyntaxToken">
      <Kind Name="GreaterThanToken"/>
    </Field>
  </Node>
  <Node Name="ArrayRankSpecifierSyntax" Base="SyntaxNode">
    <Kind Name="ArrayRankSpecifier"/>
    <Field Name="openBracket" Type="SyntaxToken">
      <Kind Name="OpenBracketToken"/>
    </Field>
    <Field Name="size" Type="ExpressionSyntax" Optional="true"/>
    <Field Name="closeBracket" Type="SyntaxToken">
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>
  <Node Name="BaseTypeSyntax" Base="SyntaxNode">
    <Kind Name="BaseType"/>
    <Field Name="extendsKeyword" Type="SyntaxToken">
      <Kind Name="ExtendsKeyword"/>
    </Field>
    <Field Name="type" Type="SimpleNameSyntax"/>
  </Node>
  <Node Name="TemplateConstraintClauseListSyntax" Base="SyntaxNode">
    <Kind Name="TemplateConstraintClauseList"/>
    <Field Name="whereKeyword" Type="SyntaxToken">
      <Kind Name="WhereKeyword"/>
    </Field>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="constraintClauses" Type="SyntaxList&lt;TemplateConstraintClauseSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="TemplateConstraintClauseSyntax" Base="SyntaxNode">
    <Kind Name="TemplateConstraintClause"/>
    <Field Name="extendConstraint" Type="TemplateExtendsConstraintClauseSyntax" Optional="true"/>
    <Field Name="isConstraint" Type="TemplateIsConstraintClauseSyntax" Optional="true"/>
    <Field Name="expressionConstraint" Type="ExpressionStatementSyntax" Optional="true"/>
  </Node>
  <Node Name="TemplateExtendsConstraintClauseSyntax" Base="SyntaxNode">
    <Kind Name="TemplateExtendsConstraintClause"/>
    <Field Name="name" Type="IdentifierNameSyntax">
      <Kind Name="IdentifierName"/>
    </Field>
    <Field Name="extendsKeyword" Type="SyntaxToken">
      <Kind Name="ExtendsKeyword"/>
    </Field>
    <Field Name="type" Type="SimpleNameSyntax"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="TemplateIsConstraintClauseSyntax" Base="SyntaxNode">
    <Kind Name="TemplateIsConstraintClause"/>
    <Field Name="name" Type="IdentifierNameSyntax">
      <Kind Name="IdentifierName"/>
    </Field>
    <Field Name="isKeyword" Type="SyntaxToken">
      <Kind Name="IsKeyword"/>
    </Field>
    <Field Name="keyword" Type="SyntaxToken"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ConstructorInitializerSyntax" Base="SyntaxNode">
    <Kind Name="ConstructorInitializer"/>
    <Field Name="colon" Type="SyntaxToken">
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="thisOrBaseKeyword" Type="SyntaxToken"/>
    <Field Name="argumentList" Type="ArgumentListSyntax"/>
  </Node>
  <!-- Directives -->
  <AbstractNode Name="DirectiveTriviaSyntax" Base="StructuredTriviaSyntax">
    <Field Name="isActive" Type="bool"/>
    <Field Name="hash" Type="SyntaxToken">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="endOfDirective" Type="SyntaxToken">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
  </AbstractNode>
  <Node Name="BadDirectiveTriviaSyntax" Base="DirectiveTriviaSyntax">
    <Kind Name="BadDirectiveTrivia"/>
    <Field Name="hash" Type="SyntaxToken" Override="true">
      <Kind Name="HashToken" />
    </Field>
    <Field Name="identifier" Type="SyntaxToken"/>
    <Field Name="endOfDirective" Type="SyntaxToken" Override="true">
      <Kind Name="EndOfDirectiveToken" />
    </Field>
  </Node>
  <!-- Names -->
  <AbstractNode Name="TypeSyntax" Base="ExpressionSyntax"/>
  <AbstractNode Name="NameSyntax" Base="TypeSyntax"/>
  <AbstractNode Name="SimpleNameSyntax" Base="NameSyntax">
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
  </AbstractNode>
  <Node Name="EmptyNameSyntax" Base="NameSyntax">
    <Kind Name="EmptyName"/>
  </Node>
  <Node Name="IdentifierNameSyntax" Base="SimpleNameSyntax">
    <Kind Name="IdentifierName"/>
    <Field Name="identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken"/>
    </Field>
  </Node>
  <Node Name="TemplateNameSyntax" Base="SimpleNameSyntax">
    <Kind Name="TemplateName"/>
    <Field Name="identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateArgumentList" Type="TemplateArgumentListSyntax"/>
  </Node>
  <Node Name="QualifiedNameSyntax" Base="NameSyntax">
    <Kind Name="QualifiedName"/>
    <Field Name="left" Type="NameSyntax"/>
    <Field Name="period" Type="SyntaxToken">
      <Kind Name="PeriodToken"/>
    </Field>
    <Field Name="right" Type="SimpleNameSyntax"/>
  </Node>
  <Node Name="ArrayTypeSyntax" Base="TypeSyntax">
    <Kind Name="ArrayType"/>
    <Field Name="elementType" Type="TypeSyntax"/>
    <Field Name="rankSpecifiers" Type="SyntaxList&lt;ArrayRankSpecifierSyntax&gt;"/>
  </Node>
  <Node Name="NonNullableTypeSyntax" Base="TypeSyntax">
    <Kind Name="NonNullableType"/>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="exclamationToken" Type="SyntaxToken">
      <Kind Name="ExclamationToken"/>
    </Field>
  </Node>
  <Node Name="ReferenceTypeSyntax" Base="TypeSyntax">
    <Kind Name="ReferenceType"/>
    <Field Name="refKeyword" Type="SyntaxToken">
      <Kind Name="RefKeyword"/>
    </Field>
    <Field Name="constKeyword" Type="SyntaxToken" Optional="true">
      <Kind Name="ConstKeyword"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
  </Node>
  <!-- Declarations -->
  <Node Name="CompilationUnitSyntax" Base="SyntaxNode">
    <Kind Name="CompilationUnit"/>
    <Field Name="members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;"/>
    <Field Name="endOfFile" Type="SyntaxToken">
      <Kind Name="EndOfFileToken"/>
    </Field>
  </Node>
  <AbstractNode Name="MemberDeclarationSyntax" Base="SyntaxNode">
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;"/>
  </AbstractNode>
  <AbstractNode Name="TypeDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="keyword" Type="SyntaxToken"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Optional="true"/>
    <Field Name="constraintClauseList" Type="TemplateConstraintClauseListSyntax" Optional="true"/>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </AbstractNode>
  <AbstractNode Name="BaseMethodDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Field Name="parameterList" Type="ParameterListSyntax"/>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </AbstractNode>
  <Node Name="VariableDeclarationSyntax" Base="SyntaxNode">
    <Kind Name="VariableDeclaration"/>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="initializer" Type="EqualsValueClauseSyntax" Optional="true"/>
  </Node>
  <Node Name="EqualsValueClauseSyntax" Base="SyntaxNode">
    <Kind Name="EqualsValueClause"/>
    <Field Name="equalsToken" Type="SyntaxToken">
      <Kind Name="EqualsToken"/>
    </Field>
    <Field Name="value" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ClassDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="ClassDeclaration"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="keyword" Type="SyntaxToken" Override="true">
      <Kind Name="ClassKeyword"/>
    </Field>
    <Field Name="identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Override="true" Optional="true"/>
    <Field Name="baseType" Type="BaseTypeSyntax" Optional="true"/>
    <Field Name="constraintClauseList" Type="TemplateConstraintClauseListSyntax" Override="true" Optional="true"/>
    <Field Name="openBrace" Type="SyntaxToken" Override="true">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true" Optional="true"/>
    <Field Name="closeBrace" Type="SyntaxToken" Override="true">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="StructDeclarationSyntax" Base="TypeDeclarationSyntax">
    <Kind Name="StructDeclaration"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="keyword" Type="SyntaxToken" Override="true">
      <Kind Name="StructKeyword"/>
    </Field>
    <Field Name="identifier" Type="SyntaxToken" Override="true">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Override="true" Optional="true"/>
    <Field Name="constraintClauseList" Type="TemplateConstraintClauseListSyntax" Override="true" Optional="true"/>
    <Field Name="openBrace" Type="SyntaxToken" Override="true">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="members" Type="SyntaxList&lt;MemberDeclarationSyntax&gt;" Override="true"/>
    <Field Name="closeBrace" Type="SyntaxToken" Override="true">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="ConstructorDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <Kind Name="ConstructorDeclaration"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="constructorKeyword" Type="SyntaxToken">
      <Kind Name="ConstructorKeyword"/>
    </Field>
    <Field Name="parameterList" Type="ParameterListSyntax" Override="true"/>
    <Field Name="constructorInitializer" Type="ConstructorInitializerSyntax" Optional="true"/>
    <Field Name="body" Type="BlockStatementSyntax" Override="true"/>
  </Node>
  <Node Name="FieldDeclarationSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="FieldDeclaration"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="declaration" Type="VariableDeclarationSyntax"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="MethodDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <Kind Name="MethodDeclaration"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="returnType" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Optional="true"/>
    <Field Name="parameterList" Type="ParameterListSyntax" Override="true"/>
    <Field Name="constraintClauseList" Type="TemplateConstraintClauseListSyntax" Optional="true"/>
    <Field Name="body" Type="BlockStatementSyntax" Override="true" Optional="true"/>
    <Field Name="semicolon" Type="SyntaxToken" Optional="true">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="OperatorDeclarationSyntax" Base="BaseMethodDeclarationSyntax">
    <Kind Name="OperatorDeclaration"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="returnType" Type="TypeSyntax"/>
    <Field Name="operatorKeyword" Type="SyntaxToken">
      <Kind Name="OperatorKeyword"/>
    </Field>
    <Field Name="operatorToken" Type="SyntaxToken"/>
    <Field Name="rightOperatorToken" Type="SyntaxToken" Optional="true"/>
    <Field Name="parameterList" Type="ParameterListSyntax" Override="true"/>
    <Field Name="body" Type="BlockStatementSyntax" Override="true"/>
  </Node>
  <!-- Statements -->
  <AbstractNode Name="StatementSyntax" Base="SyntaxNode"/>
  <Node Name="GlobalStatementSyntax" Base="MemberDeclarationSyntax">
    <Kind Name="GlobalStatement"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;" Override="true"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Override="true"/>
    <Field Name="statement" Type="StatementSyntax"/>
  </Node>
  <Node Name="LocalDeclarationStatementSyntax" Base="StatementSyntax">
    <Kind Name="LocalDeclarationStatement"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;"/>
    <Field Name="declaration" Type="VariableDeclarationSyntax"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="LocalFunctionStatementSyntax" Base="StatementSyntax">
    <Kind Name="LocalFunctionStatement"/>
    <Field Name="attributeLists" Type="SyntaxList&lt;AttributeListSyntax&gt;"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;"/>
    <Field Name="returnType" Type="TypeSyntax"/>
    <Field Name="identifier" Type="SyntaxToken">
      <Kind Name="IdentifierToken"/>
    </Field>
    <Field Name="templateParameterList" Type="TemplateParameterListSyntax" Optional="true"/>
    <Field Name="parameterList" Type="ParameterListSyntax"/>
    <Field Name="constraintClauseList" Type="TemplateConstraintClauseListSyntax" Optional="true"/>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="BlockStatementSyntax" Base="StatementSyntax">
    <Kind Name="BlockStatement"/>
    <Field Name="modifiers" Type="SyntaxList&lt;SyntaxToken&gt;" Optional="true"/>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="statements" Type="SyntaxList&lt;StatementSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="BreakStatementSyntax" Base="StatementSyntax">
    <Kind Name="BreakStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="BreakKeyword"/>
    </Field>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ContinueStatementSyntax" Base="StatementSyntax">
    <Kind Name="ContinueStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ContinueKeyword"/>
    </Field>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="DoWhileStatementSyntax" Base="StatementSyntax">
    <Kind Name="DoWhileStatement"/>
    <Field Name="doKeyword" Type="SyntaxToken">
      <Kind Name="DoKeyword"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
    <Field Name="whileKeyword" Type="SyntaxToken">
      <Kind Name="WhileKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ExpressionStatementSyntax" Base="StatementSyntax">
    <Kind Name="ExpressionStatement"/>
    <Field Name="expression" Type="ExpressionSyntax" Optional="true"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="ForStatementSyntax" Base="StatementSyntax">
    <Kind Name="ForStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ForKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="initializer" Type="StatementSyntax"/>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
    <Field Name="step" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
  </Node>
  <Node Name="IfStatementSyntax" Base="StatementSyntax">
    <Kind Name="IfStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="IfKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="then" Type="StatementSyntax"/>
    <Field Name="elseClause" Type="ElseClauseSyntax" Optional="true"/>
  </Node>
  <Node Name="ElseClauseSyntax" Base="SyntaxNode">
    <Kind Name="ElseClause"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ElseKeyword"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
  </Node>
  <Node Name="ReturnStatementSyntax" Base="StatementSyntax">
    <Kind Name="ReturnStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ReturnKeyword"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax" Optional="true"/>
    <Field Name="semicolon" Type="SyntaxToken">
      <Kind Name="SemicolonToken"/>
    </Field>
  </Node>
  <Node Name="TryStatementSyntax" Base="StatementSyntax">
    <Kind Name="TryStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="TryKeyword"/>
    </Field>
    <Field Name="body" Type="BlockStatementSyntax"/>
    <Field Name="catchClause" Type="CatchClauseSyntax" Optional="true"/>
    <Field Name="finallyClause" Type="FinallyClauseSyntax" Optional="true"/>
  </Node>
  <Node Name="CatchClauseSyntax" Base="SyntaxNode">
    <Kind Name="CatchClause"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="CatchKeyword"/>
    </Field>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="FinallyClauseSyntax" Base="SyntaxNode">
    <Kind Name="FinallyClause"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="FinallyKeyword"/>
    </Field>
    <Field Name="body" Type="BlockStatementSyntax"/>
  </Node>
  <Node Name="WhileStatementSyntax" Base="StatementSyntax">
    <Kind Name="WhileStatement"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="WhileKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="condition" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="body" Type="StatementSyntax"/>
  </Node>
  <!-- Expressions -->
  <AbstractNode Name="ExpressionSyntax" Base="SyntaxNode"/>
  <Node Name="AssignmentExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="AssignmentExpression"/>
    <Field Name="left" Type="ExpressionSyntax"/>
    <Field Name="assignmentToken" Type="SyntaxToken"/>
    <Field Name="right" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="BinaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="BinaryExpression"/>
    <Field Name="left" Type="ExpressionSyntax"/>
    <Field Name="operatorToken" Type="SyntaxToken"/>
    <Field Name="right" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="PostfixExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="PostfixExpression"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
    <Field Name="operatorToken" Type="SyntaxToken"/>
  </Node>
  <Node Name="PrefixExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="PrefixExpression"/>
    <Field Name="operatorToken" Type="SyntaxToken"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="UnaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="UnaryExpression"/>
    <Field Name="operatorToken" Type="SyntaxToken"/>
    <Field Name="operand" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="TernaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="TernaryExpression"/>
    <Field Name="left" Type="ExpressionSyntax"/>
    <Field Name="leftOperatorToken" Type="SyntaxToken"/>
    <Field Name="center" Type="ExpressionSyntax"/>
    <Field Name="rightOperatorToken" Type="SyntaxToken"/>
    <Field Name="right" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="CallExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="CallExpression"/>
    <Field Name="expression" Type="ExpressionSyntax"/>
    <Field Name="argumentList" Type="ArgumentListSyntax"/>
  </Node>
  <Node Name="CastExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="CastExpression"/>
    <Field Name="openParenthesis" Type="SyntaxToken" Optional="true">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken" Optional="true">
      <Kind Name="CloseParenToken"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ObjectCreationExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ObjectCreationExpression"/>
    <Field Name="newKeyword" Type="SyntaxToken">
      <Kind Name="NewKeyword"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="argumentList" Type="ArgumentListSyntax" Optional="true"/>
  </Node>
  <Node Name="EmptyExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="EmptyExpression"/>
    <Field Name="artificalLocation" Type="SyntaxToken" Optional="true"/>
  </Node>
  <Node Name="IndexExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="IndexExpression"/>
    <Field Name="expression" Type="ExpressionSyntax"/>
    <Field Name="openBracket" Type="SyntaxToken" Optional="true"/>
    <Field Name="index" Type="ExpressionSyntax"/>
    <Field Name="closeBracket" Type="SyntaxToken" Optional="true">
      <Kind Name="CloseBracketToken"/>
    </Field>
  </Node>
  <Node Name="InitializerListExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="InitializerListExpression"/>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="items" Type="SeparatedSyntaxList&lt;ExpressionSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="InitializerDictionaryExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="InitializerDictionaryExpression"/>
    <Field Name="openBrace" Type="SyntaxToken">
      <Kind Name="OpenBraceToken"/>
    </Field>
    <Field Name="items" Type="SeparatedSyntaxList&lt;KeyValuePairSyntax&gt;"/>
    <Field Name="closeBrace" Type="SyntaxToken">
      <Kind Name="CloseBraceToken"/>
    </Field>
  </Node>
  <Node Name="KeyValuePairSyntax" Base="ExpressionSyntax">
    <Kind Name="KeyValuePair"/>
    <Field Name="key" Type="ExpressionSyntax"/>
    <Field Name="colon" Type="SyntaxToken">
      <Kind Name="ColonToken"/>
    </Field>
    <Field Name="value" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="LiteralExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="LiteralExpression"/>
    <Field Name="token" Type="SyntaxToken"/>
  </Node>
  <Node Name="MemberAccessExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="MemberAccessExpression"/>
    <Field Name="expression" Type="ExpressionSyntax"/>
    <Field Name="operatorToken" Type="SyntaxToken"/>
    <Field Name="name" Type="SimpleNameSyntax"/>
  </Node>
  <Node Name="ParenthesisExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ParenthesizedExpression"/>
    <Field Name="openParenthesis" Type="SyntaxToken" Optional="true">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken" Optional="true">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="ReferenceExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ReferenceExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="RefKeyword"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
  </Node>
  <Node Name="ThisExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ThisExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="ThisKeyword"/>
    </Field>
  </Node>
  <Node Name="BaseExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="BaseExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="BaseKeyword"/>
    </Field>
  </Node>
  <Node Name="TypeOfExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="TypeOfExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="TypeOfKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="type" Type="TypeSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="NameOfExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="NameOfExpression"/>
    <Field Name="keyword" Type="SyntaxToken">
      <Kind Name="NameOfKeyword"/>
    </Field>
    <Field Name="openParenthesis" Type="SyntaxToken">
      <Kind Name="OpenParenToken"/>
    </Field>
    <Field Name="name" Type="NameSyntax"/>
    <Field Name="closeParenthesis" Type="SyntaxToken">
      <Kind Name="CloseParenToken"/>
    </Field>
  </Node>
  <Node Name="ThrowExpressionSyntax" Base="ExpressionSyntax">
    <Kind Name="ThrowExpression" />
    <Field Name="throwKeyword" Type="SyntaxToken">
      <Kind Name="ThrowKeyword"/>
    </Field>
    <Field Name="expression" Type="ExpressionSyntax"/>
  </Node>
</Tree>
